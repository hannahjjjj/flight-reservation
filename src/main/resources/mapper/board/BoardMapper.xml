<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.myapp.board.dao.IBoardRepository">

	<select id="getAllBoard"
		resultType="com.project.myapp.board.model.Board">
		<![CDATA[
			SELECT
				board_id	"boardId",
				category_id	"categoryId",
				member_id	"memberId",
				title		"title",
				content		"content",
				views		"views"
			FROM BOARD
		]]>
	</select>

	<select id="selectBoardListByCategory" parameterType="hashmap"
		resultType="com.project.myapp.board.model.Board">
		<![CDATA[
			SELECT
			    c.board_id AS "boardId",
			    c.category_id AS "categoryId",
			    c.member_id AS "memberId",
			    c.title AS "title",
			    c.content AS "content",
			    c.created_at AS "createdAt",
			    c.views AS "views",
			    b.board_category_name AS "boardCategoryName"
			FROM
			(
			    SELECT
			        board_id, category_id, member_id, title, content, created_at, views, rownum AS rnum
			    FROM
			    (
			        SELECT * FROM BOARD
			        WHERE category_id = #{categoryId}
			        ORDER BY board_id DESC
			    )
			) c
			LEFT OUTER JOIN board_category b ON c.category_id = b.category_id
			WHERE c.rnum BETWEEN #{start} AND #{end}
		]]>
	</select>
	
	<select id="selectMaxBoardNo" resultType="int">
		<![CDATA[
			SELECT NVL(MAX(board_id),0) AS "boardNo"
			FROM BOARD
		]]>
	</select>

	<select id="selectBoard" parameterType="int"
		resultType="com.project.myapp.board.model.Board">
			<![CDATA[
			SELECT
				b.board_id						AS	"boardId",
				c.board_category_name	AS	"boardCategoryName",
				b.member_id						AS	"memberId",
				b.title							    AS	"title",
				b.content							    AS	"content",
				b.views							    AS	"views"
			FROM BOARD b
			LEFT OUTER JOIN board_category c ON  b.category_id = c.category_id
			WHERE b.board_id = #{boardId}
		]]>
	</select>

	<insert id="insertBoard"
		parameterType="com.project.myapp.board.model.Board">
		<![CDATA[
			INSERT INTO BOARD
				(board_id,category_id,member_id, title, content)
			VALUES
				(BOARD_SEQ.NEXTVAL,#{categoryId},#{memberId},#{title},#{content})
		]]>
	</insert>

	<update id="updateBoard"
		parameterType="com.project.myapp.board.model.Board">
		<![CDATA[
			UPDATE BOARD SET
				category_id=#{categoryId}, title=#{title}, content=#{content}
			WHERE board_id = #{boardId}                                                    
		]]>
	</update>

	<delete id="deleteBoard" parameterType="int">
		<![CDATA[
			DELETE FROM BOARD
			WHERE board_id = #{boardId}
		]]>
	</delete>

	<update id="updateViews" parameterType="int">
		<![CDATA[
		UPDATE BOARD
		SET views = views+1
		WHERE board_id = #{boardId}		
		]]>
	</update>
	
	<select id="selectTotalBoardCount" resultType="int">
		<![CDATA[
			SELECT COUNT(board_id) AS "count" FROM BOARD
		]]>
	</select>
	
	<select id="selectTotalBoardCountByCategoryId" parameterType="int" resultType="int">
		<![CDATA[
			SELECT COUNT(board_id) AS "count" FROM BOARD
			WHERE category_id = #{categoryId}
		]]>
	</select>
	
	<select id="selectTotalBoardCountByKeyword" parameterType="string" resultType="int">
		<![CDATA[
			SELECT COUNT(*) FROM BOARD
			WHERE title LIKE #{keyword} OR content LIKE #{keyword}
		]]>
	</select>
	
	<select id="searchListByContentKeyword" parameterType="hashmap" resultType="com.project.myapp.board.model.Board">
		<![CDATA[
			SELECT
				board_id	"boardId",
				category_id	"categoryId",
				member_id	"memberId",
				title		"title",
				content		"content",
				views		"views"
			FROM(
				SELECT
					board_id, category_id, member_id, title, content, views, rownum
				FROM(
					SELECT * FROM BOARD
					WHERE title LIKE #{keyword} OR content LIKE #{keyword}
					ORDER BY board_id DESC
					)
				)
				WHERE rownum BETWEEN #{start} AND {end}
		]]>
	</select>
	
	<select id="selectDeleteBoard" parameterType="int" resultType="com.project.myapp.board.model.Board">
		<![CDATA[
			SELECT 
				category_id	"categoryId"
			FROM BOARD
			WHERE board_id = #{boardId}
		]]>		
	</select>

</mapper>
